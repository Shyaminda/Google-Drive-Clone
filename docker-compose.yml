services:
  frontend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.client
    image: driveway-frontend
    ports:
      - "3000:3000"
    env_file:
      - ./apps/client/.env
    environment:
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - mynetwork

  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.api
    image: driveway-backend
    ports:
      - "3001:3001"
    env_file:
      - ./apps/api/.env
    environment:
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mynetwork

  postgres:
    image: postgres:14
    env_file:
      - ./packages/db/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

volumes:
  postgres-data:

networks:
  mynetwork:
    driver: bridge
